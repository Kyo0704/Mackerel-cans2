// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  uid    String @id @db.VarChar(255) @default(cuid())
  uname   String? @db.VarChar(255) 
  registeredStore RegisteredStore[]
}

model Classification {
  gid String @id @default(cuid())
  gname String
  products  Product[]
}

model Product {
  pid         String @id @db.VarChar(255) @default(cuid())
  pname       String @db.VarChar(255)
  expiry_date DateTime?
  price       Int?
  image       String? @db.VarChar(255)
  gid            String
  production_area String?
  volume         String?
  classification        Classification    @relation(fields: [gid], references: [gid])
  states      State[]
  discounts   Discount[]
}

model Store {
  sid         String @id @db.VarChar(255)
  sname       String @db.VarChar(255)
  discounts   Discount[]
  registeredStore RegisteredStore[]
  employees Employee[]
}

model State {
  stid        String @unique @db.VarChar(255)
  pid         String @db.VarChar(255)
  stname      String @db.VarChar(255)
  @@id([stid, pid])
  product     Product @relation(fields: [pid], references: [pid])
  discounts   Discount[]
}

model Discount {
  dprice      Int @id @default(autoincrement())
  number      Int
  pid         String
  sid         String
  quantity    Int 
  stid        String
  @@map("Discount")
  product     Product @relation(fields: [pid], references: [pid])
  store       Store   @relation(fields: [sid], references: [sid])
  state       State   @relation(fields: [stid], references: [stid])
  @@unique([pid, sid, stid])
}

model RegisteredStore {
  uid    String @db.VarChar(255)
  sid    String @db.VarChar(255)
  user   User   @relation(fields: [uid], references: [uid])
  store  Store  @relation(fields: [sid], references: [sid])
  @@id([uid, sid])
}

model Employee {
  eid String @id @db.VarChar(255)
  ename String @db.VarChar(255)
  sid String @db.VarChar(255)
  jid String @db.VarChar(255)
  pass String @db.VarChar(255)
  store Store @relation(fields: [sid], references: [sid])
  job Job @relation(fields: [jid], references: [jid])
}

model Job {
  jid    String @id @db.VarChar(255)
  jname  String @db.VarChar(255)
  employees Employee[]
}